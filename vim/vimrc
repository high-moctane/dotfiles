" vim: set et sts=4 sw=4 fdm=marker :

" Required
"   - vim-plug
"       - ディレクトリがない場合は読み込まれない

" ----------------------------------------------------------------------
"   Encoding {{{1
" ----------------------------------------------------------------------

set encoding=utf-8
scriptencoding utf-8

" }}}1


" ----------------------------------------------------------------------
"   defaults.vim {{{1
" ----------------------------------------------------------------------

source $VIMRUNTIME/defaults.vim

" }}}1


" ----------------------------------------------------------------------
"   Options {{{1
" ----------------------------------------------------------------------

" 日本語
set ambiwidth=double

" インデント
set autoindent
set expandtab
set shiftwidth=4
if has('smartindent')
    set smartindent
endif
set smarttab
set softtabstop=4
set tabstop=4

" 折返し
set nowrap
set scrolloff=5
set sidescroll=5
if has('linebreak')
    set linebreak
    let &showbreak = "+++ "
endif

" 表示
set number
if has('signs')
    set signcolumn=ye
endif
if has('syntax')
    set cursorline
    set cursorcolumn
    set colorcolumn=80
endif

" サーチ
if has('extra_search')
    set hlsearch
endif
set smartcase
set wildignorecase
set wildmode=list:longest,full

" ステータスバー
set laststatus=2

" 括弧のペア
set matchpairs+=（:）,「:」,［:］,【:】,『:』,〈:〉,《:》,〔:〕,｛:｝

" 不可視文字
set list
set listchars=tab:\|\ ,extends:>,precedes:<,trail:-,eol:¬

" アップデート
set updatetime=300

" tags
set tags=./tags;,tags;

" 折りたたみ
if has('folding')
    set foldmethod=syntax
    set foldlevel=100
endif

" Tmux（色）
if has('termguicolors')
    set termguicolors
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif

" 補完
if has('textprop')
    set completeopt=menuone,popup,noinsert,noselect
else
    set completeopt=menuone,noinsert,noselect
endif

" ベル
set belloff=all

" スペルチェック
set spell
set spelllang=en_us,cjk

" マウス
if has('mouse')
    set ttymouse=xterm2
endif

" ターミナル
" if executable('xonsh')
"     set shell=xonsh
" endif

" Conceal
let g:vim_json_conceal = 0

" }}}1


" ----------------------------------------------------------------------
"   vim-plug {{{1
" ----------------------------------------------------------------------

if has('unix')
    let s:plug_dir = expand('~/.vim/plugged')
elseif has('win32')
    let s:plug_dir = expand('~\vimfiles\plugged')
else
    let s:plug_dir = ''
endif

if isdirectory(s:plug_dir)
    call plug#begin(s:plug_dir)
        " 日本語マニュアル
        Plug 'vim-jp/vimdoc-ja'

        " カラースキーム
        if isdirectory(expand('~/LDoc/projects/anthraxylon'))
            Plug '~/LDoc/projects/anthraxylon/vim'
        else
            Plug 'high-moctane/anthraxylon', {'rtp': 'vim'}
        endif

        " インデント可視化
        Plug 'Yggdroot/indentLine'

        " 補完
        Plug 'prabirshrestha/asyncomplete.vim'
        Plug 'prabirshrestha/asyncomplete-buffer.vim'
        Plug 'prabirshrestha/asyncomplete-emoji.vim'
        Plug 'prabirshrestha/asyncomplete-file.vim'
        Plug 'prabirshrestha/asyncomplete-lsp.vim'
        Plug 'prabirshrestha/vim-lsp'
        Plug 'mattn/vim-lsp-settings'
        " Plug 'neoclide/coc.nvim', {'branch': 'release'}

        Plug 'tsuyoshicho/vim-efm-langserver-settings'

        " fuzzy finder
        Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
        Plug 'junegunn/fzf.vim'

        " 括弧を閉じる
        Plug 'cohama/lexima.vim'

        " コメントアウト
        Plug 'tyru/caw.vim'

        " リピート
        Plug 'kana/vim-repeat'

        " ファイル内ファイルタイプ判別
        Plug 'Shougo/context_filetype.vim'

        " ファイルタイプ判別
        " なんか Rust のフォーマットに失敗するのでコメントアウトしてる
        " Plug 'sheerun/vim-polyglot'

        " Git
        Plug 'tpope/vim-fugitive'
        Plug 'airblade/vim-gitgutter'

        " Ctags
        " Plug 'ludovicchabant/vim-gutentags'
        " Plug 'preservim/tagbar

        " 囲んでるやつをいい感じにする
        Plug 'tpope/vim-surround'

        " ステータスライン
        " Plug 'itchyny/lightline.vim'
        " Plug 'halkn/lightline-lsp'

        " 空白消し
        Plug 'ntpeters/vim-better-whitespace'

        " SKK
        Plug 'tyru/eskk.vim'

        " Markdown Preview
        Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}

        " LaTeX
        Plug 'lervag/vimtex'

        " パラグラフ整形
        Plug 'junegunn/vim-easy-align'

        " xonsh
        Plug 'linkinpark342/xonsh-vim'
    call plug#end()
endif

" }}}1


" ----------------------------------------------------------------------
"   Source .vim/_config {{{1
" ----------------------------------------------------------------------

let s:plugs = get(s:, 'plugs', get(g:, 'plugs', {}))
function! FindPlugin(name) abort
  return has_key(s:plugs, a:name) ? isdirectory(s:plugs[a:name].dir) : 0
endfunction
command! -nargs=1 UsePlugin if !FindPlugin(<args>) | finish | endif

runtime! _config/*.vim

" }}}1


" ----------------------------------------------------------------------
"   Colorscheme {{{1
" ----------------------------------------------------------------------

colorscheme anthraxylon
set background=dark

" }}}1t
